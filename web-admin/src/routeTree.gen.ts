/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AdministratorLayoutImport } from './routes/administrator/_layout'
import { Route as AdministratorLayoutIndexImport } from './routes/administrator/_layout/index'
import { Route as AdministratorLayoutSignUpImport } from './routes/administrator/_layout/sign-up'

// Create Virtual Routes

const AdministratorImport = createFileRoute('/administrator')()
const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const AdministratorLayoutProductsLazyImport = createFileRoute(
  '/administrator/_layout/products',
)()

// Create/Update Routes

const AdministratorRoute = AdministratorImport.update({
  path: '/administrator',
  getParentRoute: () => rootRoute,
} as any)

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AdministratorLayoutRoute = AdministratorLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => AdministratorRoute,
} as any)

const AdministratorLayoutIndexRoute = AdministratorLayoutIndexImport.update({
  path: '/',
  getParentRoute: () => AdministratorLayoutRoute,
} as any)

const AdministratorLayoutProductsLazyRoute =
  AdministratorLayoutProductsLazyImport.update({
    path: '/products',
    getParentRoute: () => AdministratorLayoutRoute,
  } as any).lazy(() =>
    import('./routes/administrator/_layout/products.lazy').then((d) => d.Route),
  )

const AdministratorLayoutSignUpRoute = AdministratorLayoutSignUpImport.update({
  path: '/sign-up',
  getParentRoute: () => AdministratorLayoutRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/administrator': {
      id: '/administrator'
      path: '/administrator'
      fullPath: '/administrator'
      preLoaderRoute: typeof AdministratorImport
      parentRoute: typeof rootRoute
    }
    '/administrator/_layout': {
      id: '/administrator/_layout'
      path: '/administrator'
      fullPath: '/administrator'
      preLoaderRoute: typeof AdministratorLayoutImport
      parentRoute: typeof AdministratorRoute
    }
    '/administrator/_layout/sign-up': {
      id: '/administrator/_layout/sign-up'
      path: '/sign-up'
      fullPath: '/administrator/sign-up'
      preLoaderRoute: typeof AdministratorLayoutSignUpImport
      parentRoute: typeof AdministratorLayoutImport
    }
    '/administrator/_layout/products': {
      id: '/administrator/_layout/products'
      path: '/products'
      fullPath: '/administrator/products'
      preLoaderRoute: typeof AdministratorLayoutProductsLazyImport
      parentRoute: typeof AdministratorLayoutImport
    }
    '/administrator/_layout/': {
      id: '/administrator/_layout/'
      path: '/'
      fullPath: '/administrator/'
      preLoaderRoute: typeof AdministratorLayoutIndexImport
      parentRoute: typeof AdministratorLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  AboutLazyRoute,
  AdministratorRoute: AdministratorRoute.addChildren({
    AdministratorLayoutRoute: AdministratorLayoutRoute.addChildren({
      AdministratorLayoutSignUpRoute,
      AdministratorLayoutProductsLazyRoute,
      AdministratorLayoutIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */
